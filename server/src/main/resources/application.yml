server:
  port: 8080

spring:

  #  profiles:
  #    active: prod # dev / prod / test
  #    include: oauth

  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create # create / update / validate / none
    show-sql: true # 콘솔창에 sql 출력
    properties:
      hibernate:
      format_sql: true # pretty print SQL
      default_batch_fetch_size: 500 # 일대다 컬렉션 조회 시 성능 최적화
    open-in-view: false # 영속성 컨텍스트의 생존 범위를 트랜잭션 범위로 한정

  servlet:
    multipart:
      max-file-size: 10MB # 파일 업로드 요청 시 하나의 파일 크기를 10MB 제한
      max-request-size: 100MB # 파일 업로드 요청 시 모든 파일 크기합을 100MB 제한

logging:
  level:
    org.hibernate.type: trace # 콘솔창에 조건에 바인딩되는 값 및 조회 결과 출력
    org.springframework.orm.jpa: debug # 콘솔창에 JPA 쿼리 결과 출력
cloud:
  aws:
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: ${AWS_S3_BUCKET}
webhook:
  discord:
    url: ${DISCORD_WEBHOOK_URL}
